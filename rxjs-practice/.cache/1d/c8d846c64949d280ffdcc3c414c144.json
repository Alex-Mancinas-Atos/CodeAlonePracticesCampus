{"id":"node_modules/rxjs/src/internal/scheduled/scheduled.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"./scheduleObservable","loc":{"line":4,"column":37,"index":145},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleObservable.ts"},{"name":"./schedulePromise","loc":{"line":5,"column":34,"index":205},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\schedulePromise.ts"},{"name":"./scheduleArray","loc":{"line":6,"column":32,"index":260},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleArray.ts"},{"name":"./scheduleIterable","loc":{"line":7,"column":35,"index":316},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleIterable.ts"},{"name":"./scheduleAsyncIterable","loc":{"line":8,"column":40,"index":380},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleAsyncIterable.ts"},{"name":"../util/isInteropObservable","loc":{"line":9,"column":38,"index":447},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isInteropObservable.ts"},{"name":"../util/isPromise","loc":{"line":10,"column":28,"index":508},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isPromise.ts"},{"name":"../util/isArrayLike","loc":{"line":11,"column":30,"index":561},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isArrayLike.ts"},{"name":"../util/isIterable","loc":{"line":12,"column":29,"index":615},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isIterable.ts"},{"name":"../util/isAsyncIterable","loc":{"line":13,"column":34,"index":673},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isAsyncIterable.ts"},{"name":"../util/throwUnobservableError","loc":{"line":14,"column":41,"index":743},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\throwUnobservableError.ts"},{"name":"../util/isReadableStreamLike","loc":{"line":15,"column":39,"index":818},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isReadableStreamLike.ts"},{"name":"./scheduleReadableStreamLike","loc":{"line":16,"column":45,"index":897},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduled.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleReadableStreamLike.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.scheduled = void 0;\r\nconst scheduleObservable_1 = require(\"./scheduleObservable\");\r\nconst schedulePromise_1 = require(\"./schedulePromise\");\r\nconst scheduleArray_1 = require(\"./scheduleArray\");\r\nconst scheduleIterable_1 = require(\"./scheduleIterable\");\r\nconst scheduleAsyncIterable_1 = require(\"./scheduleAsyncIterable\");\r\nconst isInteropObservable_1 = require(\"../util/isInteropObservable\");\r\nconst isPromise_1 = require(\"../util/isPromise\");\r\nconst isArrayLike_1 = require(\"../util/isArrayLike\");\r\nconst isIterable_1 = require(\"../util/isIterable\");\r\nconst isAsyncIterable_1 = require(\"../util/isAsyncIterable\");\r\nconst throwUnobservableError_1 = require(\"../util/throwUnobservableError\");\r\nconst isReadableStreamLike_1 = require(\"../util/isReadableStreamLike\");\r\nconst scheduleReadableStreamLike_1 = require(\"./scheduleReadableStreamLike\");\r\nfunction scheduled(input, scheduler) {\r\n    if (input != null) {\r\n        if ((0, isInteropObservable_1.isInteropObservable)(input)) {\r\n            return (0, scheduleObservable_1.scheduleObservable)(input, scheduler);\r\n        }\r\n        if ((0, isArrayLike_1.isArrayLike)(input)) {\r\n            return (0, scheduleArray_1.scheduleArray)(input, scheduler);\r\n        }\r\n        if ((0, isPromise_1.isPromise)(input)) {\r\n            return (0, schedulePromise_1.schedulePromise)(input, scheduler);\r\n        }\r\n        if ((0, isAsyncIterable_1.isAsyncIterable)(input)) {\r\n            return (0, scheduleAsyncIterable_1.scheduleAsyncIterable)(input, scheduler);\r\n        }\r\n        if ((0, isIterable_1.isIterable)(input)) {\r\n            return (0, scheduleIterable_1.scheduleIterable)(input, scheduler);\r\n        }\r\n        if ((0, isReadableStreamLike_1.isReadableStreamLike)(input)) {\r\n            return (0, scheduleReadableStreamLike_1.scheduleReadableStreamLike)(input, scheduler);\r\n        }\r\n    }\r\n    throw (0, throwUnobservableError_1.createInvalidObservableTypeError)(input);\r\n}\r\nexports.scheduled = scheduled;\r\n"},"sourceMaps":{"js":{"version":3,"file":"scheduled.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/scheduled/scheduled.ts"],"names":[],"mappings":";;;AAAA,6DAA0D;AAC1D,uDAAoD;AACpD,mDAAgD;AAChD,yDAAsD;AACtD,mEAAgE;AAChE,qEAAkE;AAClE,iDAA8C;AAC9C,qDAAkD;AAClD,mDAAgD;AAGhD,6DAA0D;AAC1D,2EAAkF;AAClF,uEAAoE;AACpE,6EAA0E;AAa1E,SAAgB,SAAS,CAAI,KAAyB,EAAE,SAAwB;IAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,IAAI,IAAA,yCAAmB,EAAC,KAAK,CAAC,EAAE;YAC9B,OAAO,IAAA,uCAAkB,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC7C;QACD,IAAI,IAAA,yBAAW,EAAC,KAAK,CAAC,EAAE;YACtB,OAAO,IAAA,6BAAa,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACxC;QACD,IAAI,IAAA,qBAAS,EAAC,KAAK,CAAC,EAAE;YACpB,OAAO,IAAA,iCAAe,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC1C;QACD,IAAI,IAAA,iCAAe,EAAC,KAAK,CAAC,EAAE;YAC1B,OAAO,IAAA,6CAAqB,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAChD;QACD,IAAI,IAAA,uBAAU,EAAC,KAAK,CAAC,EAAE;YACrB,OAAO,IAAA,mCAAgB,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC3C;QACD,IAAI,IAAA,2CAAoB,EAAC,KAAK,CAAC,EAAE;YAC/B,OAAO,IAAA,uDAA0B,EAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACrD;KACF;IACD,MAAM,IAAA,yDAAgC,EAAC,KAAK,CAAC,CAAC;AAChD,CAAC;AAtBD,8BAsBC","sourcesContent":["import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n"]}},"error":null,"hash":"ae8a13c956d3a19022aab5e55c6b850e","cacheData":{"env":{}}}
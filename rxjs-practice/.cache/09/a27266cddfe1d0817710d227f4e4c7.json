{"id":"node_modules/rxjs/src/internal/util/EmptyError.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"./createErrorClass","loc":{"line":4,"column":35,"index":144},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\EmptyError.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\createErrorClass.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EmptyError = void 0;\r\nconst createErrorClass_1 = require(\"./createErrorClass\");\r\nexports.EmptyError = (0, createErrorClass_1.createErrorClass)((_super) => function EmptyErrorImpl() {\r\n    _super(this);\r\n    this.name = 'EmptyError';\r\n    this.message = 'no elements in sequence';\r\n});\r\n"},"sourceMaps":{"js":{"version":3,"file":"EmptyError.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/util/EmptyError.ts"],"names":[],"mappings":";;;AAAA,yDAAsD;AAwBzC,QAAA,UAAU,GAAmB,IAAA,mCAAgB,EAAC,CAAC,MAAM,EAAE,EAAE,CAAC,SAAS,cAAc;IAC5F,MAAM,CAAC,IAAI,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;IACzB,IAAI,CAAC,OAAO,GAAG,yBAAyB,CAAC;AAC3C,CAAC,CAAC,CAAC","sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n"]}},"error":null,"hash":"b72841e848be3af1657cfa54b3e33a87","cacheData":{"env":{}}}
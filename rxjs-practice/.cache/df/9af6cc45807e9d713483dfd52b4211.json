{"id":"node_modules/rxjs/src/internal/util/isReadableStreamLike.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"./isFunction","loc":{"line":4,"column":29,"index":193},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isReadableStreamLike.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\isFunction.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isReadableStreamLike = exports.readableStreamLikeToAsyncGenerator = void 0;\r\nconst isFunction_1 = require(\"./isFunction\");\r\nasync function* readableStreamLikeToAsyncGenerator(readableStream) {\r\n    const reader = readableStream.getReader();\r\n    try {\r\n        while (true) {\r\n            const { value, done } = await reader.read();\r\n            if (done) {\r\n                return;\r\n            }\r\n            yield value;\r\n        }\r\n    }\r\n    finally {\r\n        reader.releaseLock();\r\n    }\r\n}\r\nexports.readableStreamLikeToAsyncGenerator = readableStreamLikeToAsyncGenerator;\r\nfunction isReadableStreamLike(obj) {\r\n    return (0, isFunction_1.isFunction)(obj?.getReader);\r\n}\r\nexports.isReadableStreamLike = isReadableStreamLike;\r\n"},"sourceMaps":{"js":{"version":3,"file":"isReadableStreamLike.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/util/isReadableStreamLike.ts"],"names":[],"mappings":";;;AACA,6CAA0C;AAEnC,KAAK,SAAS,CAAC,CAAC,kCAAkC,CAAI,cAAqC;IAChG,MAAM,MAAM,GAAG,cAAc,CAAC,SAAS,EAAE,CAAC;IAC1C,IAAI;QACF,OAAO,IAAI,EAAE;YACX,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YAC5C,IAAI,IAAI,EAAE;gBACR,OAAO;aACR;YACD,MAAM,KAAM,CAAC;SACd;KACF;YAAS;QACR,MAAM,CAAC,WAAW,EAAE,CAAC;KACtB;AACH,CAAC;AAbD,gFAaC;AAED,SAAgB,oBAAoB,CAAI,GAAQ;IAG9C,OAAO,IAAA,uBAAU,EAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AACpC,CAAC;AAJD,oDAIC","sourcesContent":["import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n"]}},"error":null,"hash":"43a73d766b743ae6246377cc57e16b32","cacheData":{"env":{}}}
{"id":"node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"../Observable","loc":{"line":4,"column":29,"index":149},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleAsyncIterable.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\Observable.ts"},{"name":"../util/executeSchedule","loc":{"line":5,"column":34,"index":202},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\scheduled\\scheduleAsyncIterable.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\executeSchedule.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.scheduleAsyncIterable = void 0;\r\nconst Observable_1 = require(\"../Observable\");\r\nconst executeSchedule_1 = require(\"../util/executeSchedule\");\r\nfunction scheduleAsyncIterable(input, scheduler) {\r\n    if (!input) {\r\n        throw new Error('Iterable cannot be null');\r\n    }\r\n    return new Observable_1.Observable((subscriber) => {\r\n        (0, executeSchedule_1.executeSchedule)(subscriber, scheduler, () => {\r\n            const iterator = input[Symbol.asyncIterator]();\r\n            (0, executeSchedule_1.executeSchedule)(subscriber, scheduler, () => {\r\n                iterator.next().then((result) => {\r\n                    if (result.done) {\r\n                        subscriber.complete();\r\n                    }\r\n                    else {\r\n                        subscriber.next(result.value);\r\n                    }\r\n                });\r\n            }, 0, true);\r\n        });\r\n    });\r\n}\r\nexports.scheduleAsyncIterable = scheduleAsyncIterable;\r\n"},"sourceMaps":{"js":{"version":3,"file":"scheduleAsyncIterable.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/scheduled/scheduleAsyncIterable.ts"],"names":[],"mappings":";;;AACA,8CAA2C;AAC3C,6DAA0D;AAE1D,SAAgB,qBAAqB,CAAI,KAAuB,EAAE,SAAwB;IACxF,IAAI,CAAC,KAAK,EAAE;QACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC5C;IACD,OAAO,IAAI,uBAAU,CAAI,CAAC,UAAU,EAAE,EAAE;QACtC,IAAA,iCAAe,EAAC,UAAU,EAAE,SAAS,EAAE,GAAG,EAAE;YAC1C,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;YAC/C,IAAA,iCAAe,EACb,UAAU,EACV,SAAS,EACT,GAAG,EAAE;gBACH,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;oBAC9B,IAAI,MAAM,CAAC,IAAI,EAAE;wBAGf,UAAU,CAAC,QAAQ,EAAE,CAAC;qBACvB;yBAAM;wBACL,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;qBAC/B;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,EACD,CAAC,EACD,IAAI,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AA1BD,sDA0BC","sourcesContent":["import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n"]}},"error":null,"hash":"19f9de8f8f348e2c476dea6b2e54243a","cacheData":{"env":{}}}
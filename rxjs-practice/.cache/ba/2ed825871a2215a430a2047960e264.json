{"id":"node_modules/rxjs/src/internal/AsyncSubject.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"./Subject","loc":{"line":4,"column":26,"index":137},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\AsyncSubject.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\Subject.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AsyncSubject = void 0;\r\nconst Subject_1 = require(\"./Subject\");\r\nclass AsyncSubject extends Subject_1.Subject {\r\n    _value = null;\r\n    _hasValue = false;\r\n    _isComplete = false;\r\n    _checkFinalizedStatuses(subscriber) {\r\n        const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\r\n        if (hasError) {\r\n            subscriber.error(thrownError);\r\n        }\r\n        else if (isStopped || _isComplete) {\r\n            _hasValue && subscriber.next(_value);\r\n            subscriber.complete();\r\n        }\r\n    }\r\n    next(value) {\r\n        if (!this.isStopped) {\r\n            this._value = value;\r\n            this._hasValue = true;\r\n        }\r\n    }\r\n    complete() {\r\n        const { _hasValue, _value, _isComplete } = this;\r\n        if (!_isComplete) {\r\n            this._isComplete = true;\r\n            _hasValue && super.next(_value);\r\n            super.complete();\r\n        }\r\n    }\r\n}\r\nexports.AsyncSubject = AsyncSubject;\r\n"},"sourceMaps":{"js":{"version":3,"file":"AsyncSubject.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/AsyncSubject.ts"],"names":[],"mappings":";;;AAAA,uCAAoC;AASpC,MAAa,YAAgB,SAAQ,iBAAU;IACrC,MAAM,GAAa,IAAI,CAAC;IACxB,SAAS,GAAG,KAAK,CAAC;IAClB,WAAW,GAAG,KAAK,CAAC;IAGlB,uBAAuB,CAAC,UAAyB;QACzD,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QAClF,IAAI,QAAQ,EAAE;YACZ,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SAC/B;aAAM,IAAI,SAAS,IAAI,WAAW,EAAE;YACnC,SAAS,IAAI,UAAU,CAAC,IAAI,CAAC,MAAO,CAAC,CAAC;YACtC,UAAU,CAAC,QAAQ,EAAE,CAAC;SACvB;IACH,CAAC;IAED,IAAI,CAAC,KAAQ;QACX,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACvB;IACH,CAAC;IAED,QAAQ;QACN,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QAChD,IAAI,CAAC,WAAW,EAAE;YAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,MAAO,CAAC,CAAC;YACjC,KAAK,CAAC,QAAQ,EAAE,CAAC;SAClB;IACH,CAAC;CACF;AA/BD,oCA+BC","sourcesContent":["import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n"]}},"error":null,"hash":"0d7faf210d6c1a2b3b91f20e93158bc5","cacheData":{"env":{}}}
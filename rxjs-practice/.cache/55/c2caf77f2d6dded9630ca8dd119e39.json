{"id":"node_modules/rxjs/src/internal/operators/raceWith.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"../observable/race","loc":{"line":4,"column":23,"index":130},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\raceWith.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\observable\\race.ts"},{"name":"../util/lift","loc":{"line":5,"column":23,"index":177},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\raceWith.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\lift.ts"},{"name":"../util/identity","loc":{"line":6,"column":27,"index":222},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\raceWith.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\identity.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.raceWith = void 0;\r\nconst race_1 = require(\"../observable/race\");\r\nconst lift_1 = require(\"../util/lift\");\r\nconst identity_1 = require(\"../util/identity\");\r\nfunction raceWith(...otherSources) {\r\n    return !otherSources.length\r\n        ? identity_1.identity\r\n        : (0, lift_1.operate)((source, subscriber) => {\r\n            (0, race_1.raceInit)([source, ...otherSources])(subscriber);\r\n        });\r\n}\r\nexports.raceWith = raceWith;\r\n"},"sourceMaps":{"js":{"version":3,"file":"raceWith.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/operators/raceWith.ts"],"names":[],"mappings":";;;AACA,6CAA8C;AAC9C,uCAAuC;AACvC,+CAA4C;AA4B5C,SAAgB,QAAQ,CACtB,GAAG,YAA0C;IAE7C,OAAO,CAAC,YAAY,CAAC,MAAM;QACzB,CAAC,CAAC,mBAAQ;QACV,CAAC,CAAC,IAAA,cAAO,EAAC,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;YAC7B,IAAA,eAAQ,EAAgB,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;AACT,CAAC;AARD,4BAQC","sourcesContent":["import { OperatorFunction, ObservableInputTuple } from '../types';\nimport { raceInit } from '../observable/race';\nimport { operate } from '../util/lift';\nimport { identity } from '../util/identity';\n\n/**\n * Creates an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of the Observable to which\n * the operator is applied and supplied Observables.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, raceWith } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * obs1\n *   .pipe(raceWith(obs2, obs3))\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param otherSources Sources used to race for which Observable emits first.\n * @return A function that returns an Observable that mirrors the output of the\n * first Observable to emit an item.\n */\nexport function raceWith<T, A extends readonly unknown[]>(\n  ...otherSources: [...ObservableInputTuple<A>]\n): OperatorFunction<T, T | A[number]> {\n  return !otherSources.length\n    ? identity\n    : operate((source, subscriber) => {\n        raceInit<T | A[number]>([source, ...otherSources])(subscriber);\n      });\n}\n"]}},"error":null,"hash":"dfd024989e90b82871ca7865f527d2ff","cacheData":{"env":{}}}
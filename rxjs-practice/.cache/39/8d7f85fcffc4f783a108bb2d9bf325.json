{"id":"node_modules/rxjs/src/internal/util/NotFoundError.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"./createErrorClass","loc":{"line":4,"column":35,"index":147},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\NotFoundError.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\createErrorClass.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NotFoundError = void 0;\r\nconst createErrorClass_1 = require(\"./createErrorClass\");\r\nexports.NotFoundError = (0, createErrorClass_1.createErrorClass)((_super) => function NotFoundErrorImpl(message) {\r\n    _super(this);\r\n    this.name = 'NotFoundError';\r\n    this.message = message;\r\n});\r\n"},"sourceMaps":{"js":{"version":3,"file":"NotFoundError.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/util/NotFoundError.ts"],"names":[],"mappings":";;;AAAA,yDAAsD;AAoBzC,QAAA,aAAa,GAAsB,IAAA,mCAAgB,EAC9D,CAAC,MAAM,EAAE,EAAE,CACT,SAAS,iBAAiB,CAAY,OAAe;IACnD,MAAM,CAAC,IAAI,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;IAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB,CAAC,CACJ,CAAC","sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n"]}},"error":null,"hash":"0f5be6e5ed6c3830ad22d1db06aad06f","cacheData":{"env":{}}}
{"id":"node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"./createErrorClass","loc":{"line":4,"column":35,"index":157},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\ObjectUnsubscribedError.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\createErrorClass.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObjectUnsubscribedError = void 0;\r\nconst createErrorClass_1 = require(\"./createErrorClass\");\r\nexports.ObjectUnsubscribedError = (0, createErrorClass_1.createErrorClass)((_super) => function ObjectUnsubscribedErrorImpl() {\r\n    _super(this);\r\n    this.name = 'ObjectUnsubscribedError';\r\n    this.message = 'object unsubscribed';\r\n});\r\n"},"sourceMaps":{"js":{"version":3,"file":"ObjectUnsubscribedError.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts"],"names":[],"mappings":";;;AAAA,yDAAsD;AAqBzC,QAAA,uBAAuB,GAAgC,IAAA,mCAAgB,EAClF,CAAC,MAAM,EAAE,EAAE,CACT,SAAS,2BAA2B;IAClC,MAAM,CAAC,IAAI,CAAC,CAAC;IACb,IAAI,CAAC,IAAI,GAAG,yBAAyB,CAAC;IACtC,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;AACvC,CAAC,CACJ,CAAC","sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n"]}},"error":null,"hash":"66d7da9a1d8e4a896a5f434f09ccbff7","cacheData":{"env":{}}}
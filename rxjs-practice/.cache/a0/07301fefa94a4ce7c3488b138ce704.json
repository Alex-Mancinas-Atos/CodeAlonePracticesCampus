{"id":"node_modules/rxjs/src/internal/operators/merge.ts","dependencies":[{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\tsconfig.json","includedInParent":true,"mtime":1658249596656},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\package.json","includedInParent":true,"mtime":1658249837276},{"name":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1658249596644},{"name":"../util/lift","loc":{"line":4,"column":23,"index":127},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\merge.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\lift.ts"},{"name":"../util/argsOrArgArray","loc":{"line":5,"column":33,"index":178},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\merge.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\argsOrArgArray.ts"},{"name":"./mergeAll","loc":{"line":6,"column":27,"index":233},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\merge.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\mergeAll.ts"},{"name":"../util/args","loc":{"line":7,"column":23,"index":272},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\merge.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\util\\args.ts"},{"name":"../observable/from","loc":{"line":8,"column":23,"index":313},"parent":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\operators\\merge.ts","resolved":"C:\\Users\\a875232\\Documents\\rxjs-practice\\node_modules\\rxjs\\src\\internal\\observable\\from.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.merge = void 0;\r\nconst lift_1 = require(\"../util/lift\");\r\nconst argsOrArgArray_1 = require(\"../util/argsOrArgArray\");\r\nconst mergeAll_1 = require(\"./mergeAll\");\r\nconst args_1 = require(\"../util/args\");\r\nconst from_1 = require(\"../observable/from\");\r\nfunction merge(...args) {\r\n    const scheduler = (0, args_1.popScheduler)(args);\r\n    const concurrent = (0, args_1.popNumber)(args, Infinity);\r\n    args = (0, argsOrArgArray_1.argsOrArgArray)(args);\r\n    return (0, lift_1.operate)((source, subscriber) => {\r\n        (0, mergeAll_1.mergeAll)(concurrent)((0, from_1.from)([source, ...args], scheduler)).subscribe(subscriber);\r\n    });\r\n}\r\nexports.merge = merge;\r\n"},"sourceMaps":{"js":{"version":3,"file":"merge.js","sourceRoot":"","sources":["node_modules/rxjs/src/internal/operators/merge.ts"],"names":[],"mappings":";;;AACA,uCAAuC;AACvC,2DAAwD;AACxD,yCAAsC;AACtC,uCAAuD;AACvD,6CAA0C;AAiB1C,SAAgB,KAAK,CAAI,GAAG,IAAe;IACzC,MAAM,SAAS,GAAG,IAAA,mBAAY,EAAC,IAAI,CAAC,CAAC;IACrC,MAAM,UAAU,GAAG,IAAA,gBAAS,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC7C,IAAI,GAAG,IAAA,+BAAc,EAAC,IAAI,CAAC,CAAC;IAE5B,OAAO,IAAA,cAAO,EAAC,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE;QACpC,IAAA,mBAAQ,EAAC,UAAU,CAAC,CAAC,IAAA,WAAI,EAAC,CAAC,MAAM,EAAE,GAAI,IAA6B,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;AACL,CAAC;AARD,sBAQC","sourcesContent":["import { ObservableInput, ObservableInputTuple, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mergeAll } from './mergeAll';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from '../observable/from';\n\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrency: [...ObservableInputTuple<A>, number]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n/** @deprecated Replaced with {@link mergeWith}. Will be removed in v8. */\nexport function merge<T, A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number, SchedulerLike]\n): OperatorFunction<T, T | A[number]>;\n\nexport function merge<T>(...args: unknown[]): OperatorFunction<T, unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  args = argsOrArgArray(args);\n\n  return operate((source, subscriber) => {\n    mergeAll(concurrent)(from([source, ...(args as ObservableInput<T>[])], scheduler)).subscribe(subscriber);\n  });\n}\n"]}},"error":null,"hash":"41ad4506b1f2899b105c8e7b5d5fbbc1","cacheData":{"env":{}}}